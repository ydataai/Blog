apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: lambda-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.11, pipelines.kubeflow.org/pipeline_compilation_time: '2022-02-21T09:43:05.796466',
    pipelines.kubeflow.org/pipeline_spec: '{"name": "<lambda>"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.11}
spec:
  entrypoint: lambda
  templates:
  - name: classifier
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "classifier-034a0b59-6caf-45e5-a0c2-9dc19ac2ca3b.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/classifier.ipynb"
          --inputs "outputs/data.csv;outputs/non_fraud.csv;outputs/fraud.csv" ']
      command: [sh, -c]
      env:
      - {name: DATA_PATH, value: outputs/data.csv}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/classifier.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: classifier
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: classifier-2
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "classifier-ebea8846-b465-4b5a-a554-0b3e4d64aaaf.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/classifier.ipynb"
          --inputs "outputs/synth_model.pkl;outputs/non_fraud.csv;outputs/fraud.csv;outputs/combined_fraud500.csv;outputs/data.csv;outputs/synth_sample_500.csv" ']
      command: [sh, -c]
      env:
      - {name: DATA_PATH, value: outputs/combined_fraud500.csv}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1.5'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/classifier.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: classifier
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: classifier-3
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "classifier-792da286-45b0-46c8-9e22-1ce4b31e271c.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/classifier.ipynb"
          --inputs "outputs/combined_fraud500.csv;outputs/non_fraud.csv;outputs/fraud.csv;outputs/synth_sample_200.csv;outputs/data.csv;outputs/synth_model.pkl" ']
      command: [sh, -c]
      env:
      - {name: DATA_PATH, value: outputs/combined_fraud200.csv}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1.5'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/classifier.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: classifier
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: concat-data
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "concat-data-d996ebaa-1eb9-4aab-bfd7-4642e8abecbf.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/concat-data.ipynb"
          --inputs "outputs/synth_model.pkl;outputs/non_fraud.csv;outputs/fraud.csv;outputs/data.csv;outputs/synth_sample_500.csv"
          --outputs "outputs/combined_fraud500.csv" ']
      command: [sh, -c]
      env:
      - {name: SYNTH_DATA_PATH, value: '''outputs/synth_sample_500.csv'''}
      - {name: OUTPUT_PATH, value: '''outputs/combined_fraud500.csv'''}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/concat-data.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: concat-data
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: concat-data-2
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "concat-data-48c4d609-4bd0-41bf-a720-4cf857a77b2a.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/concat-data.ipynb"
          --inputs "outputs/non_fraud.csv;outputs/fraud.csv;outputs/synth_sample_200.csv;outputs/data.csv;outputs/synth_model.pkl"
          --outputs "outputs/combined_fraud500.csv" ']
      command: [sh, -c]
      env:
      - {name: SYNTH_DATA_PATH, value: '''outputs/synth_sample_500.csv'' OUTPUT_PATH=''outputs/combined_fraud200.csv'''}
      - {name: OUTPUT_PATH, value: '''outputs/combined_fraud200.csv'''}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/concat-data.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: concat-data
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: fraud-train-synthesizer
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "train-synth-34ff7eb0-8785-46e3-b3d0-8b90d137758f.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/train-synth.ipynb"
          --inputs "outputs/data.csv;outputs/non_fraud.csv;outputs/fraud.csv" --outputs
          "outputs/synth_model.pkl" ']
      command: [sh, -c]
      env:
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-gpu
      resources:
        requests: {cpu: '1', memory: 12G}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/train-synth.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: fraud_train_synthesizer
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: lambda
    dag:
      tasks:
      - name: classifier
        template: classifier
        dependencies: [read-data]
      - name: classifier-2
        template: classifier-2
        dependencies: [concat-data]
      - name: classifier-3
        template: classifier-3
        dependencies: [concat-data-2]
      - name: concat-data
        template: concat-data
        dependencies: [read-data, sample-synth]
      - name: concat-data-2
        template: concat-data-2
        dependencies: [sample-synth-2]
      - name: fraud-train-synthesizer
        template: fraud-train-synthesizer
        dependencies: [read-data]
      - {name: read-data, template: read-data}
      - name: sample-synth
        template: sample-synth
        dependencies: [fraud-train-synthesizer]
      - name: sample-synth-2
        template: sample-synth-2
        dependencies: [fraud-train-synthesizer]
  - name: read-data
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "read-data-a918a628-ae3b-4ef1-ae35-59926d7429d8.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/read-data.ipynb"
          --outputs "outputs/fraud.csv;outputs/non_fraud.csv;outputs/data.csv" ']
      command: [sh, -c]
      env:
      - {name: DATASET_PATH, value: '''gs://ydata_testdata/tabular/credit_fraud/data.csv'''}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/read-data.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: read-data
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: sample-synth
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "sample_synth-9d7068de-55d0-4b6a-9ee2-db42fab8ba11.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/sample_synth.ipynb"
          --inputs "outputs/fraud.csv;outputs/synth_model.pkl;outputs/non_fraud.csv;outputs/data.csv"
          --outputs "outputs/synth_sample_500.csv" ']
      command: [sh, -c]
      env:
      - {name: NSAMPLES, value: '500'}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/sample_synth.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: sample_synth
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: sample-synth-2
    container:
      args: ['mkdir -p ./jupyter-work-dir/ && cd ./jupyter-work-dir/ && curl -H "Cache-Control:
          no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/elyra/kfp/bootstrapper.py
          --output bootstrapper.py && curl -H "Cache-Control: no-cache" -L https://raw.githubusercontent.com/elyra-ai/elyra/v3.5.2/etc/generic/requirements-elyra.txt
          --output requirements-elyra.txt && python3 -m pip install  packaging &&
          python3 -m pip freeze > requirements-current.txt && python3 bootstrapper.py
          --cos-endpoint http://minio-service.kubeflow:9000 --cos-bucket elyra-0ca15a25-94c5-4745-bcf5-3efd2be72e24
          --cos-directory "Credit_fraud-0221094303" --cos-dependencies-archive "sample_synth-05003c47-0a90-453b-a866-e9c46deac693.tar.gz"
          --file "academy/synthesizers/regular-tabular/credit_card_fraud-balancing/sample_synth.ipynb"
          --inputs "outputs/fraud.csv;outputs/synth_model.pkl;outputs/non_fraud.csv;outputs/data.csv"
          --outputs "outputs/synth_sample_200.csv" ']
      command: [sh, -c]
      env:
      - {name: NSAMPLES, value: '200'}
      - {name: ELYRA_RUNTIME_ENV, value: kfp}
      - {name: AWS_ACCESS_KEY_ID, value: minio}
      - {name: AWS_SECRET_ACCESS_KEY, value: minio123}
      - name: ELYRA_ENABLE_PIPELINE_INFO
        value: "True"
      - {name: ELYRA_WRITABLE_CONTAINER_DIR, value: /tmp}
      - {name: ELYRA_RUN_NAME, value: '{{workflow.uid}}'}
      image: ydata220217095712.azurecr.io/pipelines_ydata:0.32.42-cpu
      resources:
        requests: {cpu: '1'}
    outputs:
      artifacts:
      - {name: mlpipeline-metrics, path: /tmp/mlpipeline-metrics.json}
      - {name: mlpipeline-ui-metadata, path: /tmp/mlpipeline-ui-metadata.json}
    metadata:
      annotations: {elyra/node-file-name: academy/synthesizers/regular-tabular/credit_card_fraud-balancing/sample_synth.ipynb,
        elyra/pipeline-source: Credit_fraud.pipeline}
      labels:
        elyra/node-type: notebook-script
        elyra/pipeline-name: Credit_fraud
        elyra/pipeline-version: ''
        elyra/experiment-name: ''
        elyra/node-name: sample_synth
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.11
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters: []
  serviceAccountName: pipeline-runner
